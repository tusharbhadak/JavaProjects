
package client;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebService(name = "JPAWebService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface JPAWebService {


    /**
     * 
     * @param sal
     * @return
     *     returns java.util.List<client.Employee>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmployeesOnSal", targetNamespace = "http://service/", className = "client.GetEmployeesOnSal")
    @ResponseWrapper(localName = "getEmployeesOnSalResponse", targetNamespace = "http://service/", className = "client.GetEmployeesOnSalResponse")
    @Action(input = "http://service/JPAWebService/getEmployeesOnSalRequest", output = "http://service/JPAWebService/getEmployeesOnSalResponse")
    public List<Employee> getEmployeesOnSal(
        @WebParam(name = "sal", targetNamespace = "")
        double sal);

    /**
     * 
     * @return
     *     returns java.util.List<client.Employee>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllEmployees", targetNamespace = "http://service/", className = "client.GetAllEmployees")
    @ResponseWrapper(localName = "getAllEmployeesResponse", targetNamespace = "http://service/", className = "client.GetAllEmployeesResponse")
    @Action(input = "http://service/JPAWebService/getAllEmployeesRequest", output = "http://service/JPAWebService/getAllEmployeesResponse")
    public List<Employee> getAllEmployees();

    /**
     * 
     * @param ename
     * @param empno
     * @param sal
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addEmployee", targetNamespace = "http://service/", className = "client.AddEmployee")
    @Action(input = "http://service/JPAWebService/addEmployee")
    public void addEmployee(
        @WebParam(name = "empno", targetNamespace = "")
        int empno,
        @WebParam(name = "ename", targetNamespace = "")
        String ename,
        @WebParam(name = "sal", targetNamespace = "")
        double sal);

    /**
     * 
     * @param ename
     * @param empno
     * @param sal
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateEmployee", targetNamespace = "http://service/", className = "client.UpdateEmployee")
    @Action(input = "http://service/JPAWebService/updateEmployee")
    public void updateEmployee(
        @WebParam(name = "empno", targetNamespace = "")
        int empno,
        @WebParam(name = "ename", targetNamespace = "")
        String ename,
        @WebParam(name = "sal", targetNamespace = "")
        double sal);

    /**
     * 
     * @param empno
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeEmployee", targetNamespace = "http://service/", className = "client.RemoveEmployee")
    @Action(input = "http://service/JPAWebService/removeEmployee")
    public void removeEmployee(
        @WebParam(name = "empno", targetNamespace = "")
        int empno);

}
